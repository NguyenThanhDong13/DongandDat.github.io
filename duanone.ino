#include <DHT.h>

// --- Khai b√°o ch√¢n ---
#define GAS_PIN A0        // C·∫£m bi·∫øn gas MQ ho·∫∑c c·∫£m bi·∫øn ƒë·∫•t
#define BUZZER_PIN D6
#define RELAY_PIN D5
#define LED_PIN D2
#define BUTTON_PIN D4
#define DHT_PIN D1        // DHT22 d√πng ch√¢n D1 (GPIO5)

// --- DHT22 ---
#define DHTTYPE DHT22
DHT dht(DHT_PIN, DHTTYPE);

// --- Tr·∫°ng th√°i ---
unsigned long gasLowStartTime = 0;
bool alarmActive = false;
bool buzzerSilenced = false;

// LED v√† buzzer active LOW
#define LED_ON  LOW
#define LED_OFF HIGH
#define BUZZER_ON  LOW
#define BUZZER_OFF HIGH

// X·ª≠ l√Ω n√∫t
unsigned long buttonPressStart = 0;
bool buttonWasPressed = false;
bool testModeActivated = false;

void setup() {
  Serial.begin(115200);

  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(RELAY_PIN, OUTPUT);
  pinMode(LED_PIN, OUTPUT);
  pinMode(BUTTON_PIN, INPUT_PULLUP);

  digitalWrite(BUZZER_PIN, BUZZER_OFF);
  digitalWrite(RELAY_PIN, LOW);
  digitalWrite(LED_PIN, LED_OFF);

  dht.begin();
}

void loop() {
  // ƒê·ªçc n√∫t nh·∫•n
  bool buttonPressed = digitalRead(BUTTON_PIN) == LOW;

  // ƒê·ªçc c·∫£m bi·∫øn DHT
  float h = dht.readHumidity();
  float t = dht.readTemperature();

  if (!isnan(h) && !isnan(t)) {
    Serial.print("üå° Nhi·ªát ƒë·ªô: ");
    Serial.print(t);
    Serial.print("¬∞C, üíß ƒê·ªô ·∫©m kh√¥ng kh√≠: ");
    Serial.print(h);
    Serial.println("%");
  } else {
    Serial.println("‚ö†Ô∏è L·ªói ƒë·ªçc DHT22");
  }

  // ƒê·ªçc c·∫£m bi·∫øn gas ho·∫∑c ƒë·∫•t (tu·ª≥ m·ª•c ƒë√≠ch)
  int analogValue = analogRead(GAS_PIN);
  Serial.print("üìü Gi√° tr·ªã analog (Gas/ƒê·∫•t): ");
  Serial.println(analogValue);

  // --- X·ª≠ l√Ω n√∫t nh·∫•n ---
  if (buttonPressed && !buttonWasPressed) {
    buttonPressStart = millis();
    buttonWasPressed = true;
    testModeActivated = false;
  } else if (!buttonPressed && buttonWasPressed) {
    unsigned long pressDuration = millis() - buttonPressStart;
    buttonWasPressed = false;

    if (pressDuration < 2000) {
      digitalWrite(BUZZER_PIN, BUZZER_OFF);
      digitalWrite(RELAY_PIN, LOW);
      digitalWrite(LED_PIN, LED_OFF);
      alarmActive = false;
      buzzerSilenced = false;
      gasLowStartTime = 0;

      Serial.println("üî¥ Nh·∫•n ng·∫Øn -> T·∫Øt t·∫•t c·∫£!");
    }
  }

  // Ch·∫ø ƒë·ªô TEST
  if (buttonPressed && buttonWasPressed && !testModeActivated) {
    if (millis() - buttonPressStart >= 2000) {
      Serial.println("üß™ Ch·∫ø ƒë·ªô TEST h·ªá th·ªëng!");
      digitalWrite(RELAY_PIN, HIGH);
      digitalWrite(LED_PIN, LED_ON);
      digitalWrite(BUZZER_PIN, BUZZER_ON);
      delay(3000);
      digitalWrite(RELAY_PIN, LOW);
      digitalWrite(LED_PIN, LED_OFF);
      digitalWrite(BUZZER_PIN, BUZZER_OFF);
      testModeActivated = true;
    }
  }

  // --- ƒêi·ªÅu ki·ªán c·∫£nh b√°o kh√≠ gas ---
  if (analogValue > 300) {
    Serial.println("üî• Ph√°t hi·ªán kh√≠ gas ho·∫∑c ƒë·∫•t qu√° kh√¥!");
    digitalWrite(RELAY_PIN, HIGH);
    digitalWrite(LED_PIN, LED_ON);
if (!buzzerSilenced) digitalWrite(BUZZER_PIN, BUZZER_ON);
    alarmActive = true;
    gasLowStartTime = 0;
  } else {
    if (alarmActive) {
      if (gasLowStartTime == 0) gasLowStartTime = millis();

      if (millis() - gasLowStartTime >= 4000) {
        Serial.println("‚úÖ ƒê√£ ·ªïn ƒë·ªãnh. T·∫Øt c·∫£nh b√°o.");
        digitalWrite(BUZZER_PIN, BUZZER_OFF);
        digitalWrite(RELAY_PIN, LOW);
        digitalWrite(LED_PIN, LED_OFF);
        alarmActive = false;
        buzzerSilenced = false;
      }
    } else {
      digitalWrite(LED_PIN, LED_OFF);
    }x1
  }

  delay(1000); // Ch·ªù ƒë·ªÉ ƒë·ªçc DHT & analog ·ªïn ƒë·ªãnh
}